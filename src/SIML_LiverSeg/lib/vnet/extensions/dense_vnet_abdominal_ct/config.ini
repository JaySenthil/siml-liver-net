############################ input configuration sections
[ct]
path_to_search = ./lib/vnet/data/dense_vnet_abdominal_ct/
filename_contains = test-volume
spatial_window_size = (144, 144, 144)
interp_order = 1
axcodes=(A, R, S)

[seg]
path_to_search = ./lib/vnet/models/dense_vnet_abdominal_ct/segmentation_output/
filename_contains = window_seg_, __niftynet_out
filename_not_contains =
spatial_window_size = (144, 144, 144)
interp_order = 0

[label]
path_to_search = ./lib/vnet/data/dense_vnet_abdominal_ct/
filename_contains = label
spatial_window_size = (144, 144, 144)
interp_order = 0
axcodes=(A, R, S)

############################## system configuration sections
[SYSTEM]
cuda_devices = ""
num_threads = 1
num_gpus = 1
model_dir = ./lib/vnet/models/dense_vnet_abdominal_ct/
queue_length = 36

[NETWORK]
name = dense_vnet
# batch size 1 for inference
# batch size 6 for training
batch_size = 1

# volume level preprocessing
volume_padding_size = 0
window_sampling = resize

[TRAINING]
sample_per_volume = 1
lr = 0.001
loss_type = dense_vnet_abdominal_ct.dice_hinge.dice
starting_iter = 3502
save_every_n = 1000
max_iter = 3701
exclude_fraction_for_validation = 0.33
validation_every_n = 25

[INFERENCE]
border = (0, 0, 0)
inference_iter = 3000
output_interp_order = 0
spatial_window_size = (144, 144, 144)
save_seg_dir = ./segmentation_output/

[EVALUATION]
evaluations = Dice
save_csv_dir = ./lib/vnet/models/dense_vnet_abdominal_ct/

############################ custom configuration sections
[SEGMENTATION]
image = ct
label = label
inferred = seg
label_normalisation = False
output_prob = False
num_classes = 9
evaluation_units = foreground
